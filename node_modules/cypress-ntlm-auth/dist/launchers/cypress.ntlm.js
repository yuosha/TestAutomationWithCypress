#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dependency_injection_1 = require("../proxy/dependency.injection");
const dependency_injection_types_1 = require("../proxy/dependency.injection.types");
const container = new dependency_injection_1.DependencyInjection();
let cypressNtlm = container.get(dependency_injection_types_1.TYPES.ICypressNtlm);
const upstreamProxyConfigurator = container.get(dependency_injection_types_1.TYPES.IUpstreamProxyConfigurator);
if (cypressNtlm.checkCypressIsInstalled() === false) {
    process.stderr.write("ERROR: cypress-ntlm requires Cypress to be installed.\n");
    process.exit(1);
}
upstreamProxyConfigurator.processNoProxyLoopback();
cypressNtlm
    .checkProxyIsRunning(15000, 200)
    .then(portsFile => {
    process.env.HTTP_PROXY = portsFile.ntlmProxyUrl;
    process.env.HTTPS_PROXY = portsFile.ntlmProxyUrl;
    process.env.NO_PROXY = "<-loopback>";
    upstreamProxyConfigurator.removeUnusedProxyEnv();
    // Start up Cypress and let it parse any command line arguments
    require("cypress/lib/cli").init();
})
    .catch(() => {
    process.stderr.write("ERROR: ntlm-proxy must be started before this command\n");
    process.exit(1);
});
